[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and verbosity
addopts = 
    --tb=no
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --durations-min=0.1
    -q
    --no-header
    --no-summary
    --html=reports/pytest-report.html
    --self-contained-html
    --metadata Environment staging
    --metadata Project "Backend Tutorial DDD"
    --cov=src
    --cov-report=html:reports/coverage
    --cov-fail-under=80
    --disable-warnings

# Markers for test organization
markers =
    # Test types
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, external dependencies)
    e2e: End-to-end tests (slowest, full system)
    
    # Test categories
    slow: Tests that take longer than 1 second
    critical: Critical path tests that must pass
    flaky: Tests that occasionally fail (for monitoring)
    
    # Domain-specific
    domain: Domain layer tests
    application: Application layer tests
    infrastructure: Infrastructure layer tests
    api: API layer tests
    
    # Parallel execution groups
    xdist_group(name): Group tests for parallel execution

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# HTML report configuration
html_report_title = "Backend Tutorial DDD - Test Report"
html_report_description = "Comprehensive test results for the DDD backend tutorial"

# Environment variables to redact from reports
environment_table_redact_list = 
    ^AWS_
    ^SECRET
    ^PASSWORD
    ^TOKEN
    ^KEY 